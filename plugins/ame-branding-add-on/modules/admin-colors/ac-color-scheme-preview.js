'use strict';
(function ($) {
    if (typeof lodash === 'undefined') {
        return;
    }
    var isOverrideEnabled = wsAmeBrandingClsPreviewData.isOverrideEnabled;
    var forceEnablePreview = wsAmeBrandingClsPreviewData.forceEnablePreview;
    var currentColors = {};
    var $nodesToRemove = [];
    var $latestStylesheet = null;
    var updateColorPreview = lodash.throttle(function () {
        //Preview is enabled only if the "is_color_override_enabled" setting is enabled
        //or if the special "force enable preview" setting is enabled.
        var isPreviewEnabled = isOverrideEnabled || forceEnablePreview;
        if (!isPreviewEnabled) {
            //Remove all preview stylesheets.
            $nodesToRemove.forEach(function ($node) {
                $node.remove();
            });
            $nodesToRemove = [];
            if ($latestStylesheet) {
                $latestStylesheet.remove();
                $latestStylesheet = null;
            }
            //Also remove the normal color scheme stylesheet generated by PHP
            //if it looks like it was added by this plugin.
            var $colorSchemeStyle = $('head link#colors-css');
            if ($colorSchemeStyle.length > 0) {
                var href = $colorSchemeStyle.attr('href');
                if (href && (href.indexOf('ame_branding_preview_colors')) !== -1) {
                    $colorSchemeStyle.remove();
                }
            }
            return;
        }
        var colors = [];
        for (var variableName in currentColors) {
            var color = currentColors[variableName];
            if ((color !== null) && (color !== '')) {
                var index = wsAmeBrandingClsPreviewData.colorVariableOrder[variableName];
                colors[index] = color.replace('#', '');
            }
        }
        var stylesheetUrl = wsAmeBrandingClsPreviewData.previewBaseUrl
            + '&colors=' + encodeURIComponent(colors.join('.'));
        var $stylesheet = $('<link/>', {
            'rel': 'stylesheet',
            'type': 'text/css',
            'href': stylesheetUrl
        });
        if ($latestStylesheet !== null) {
            $nodesToRemove.push($latestStylesheet);
        }
        $latestStylesheet = $stylesheet;
        $stylesheet.on('load', function () {
            if ($nodesToRemove.length > 0) {
                $nodesToRemove.forEach(function ($node) {
                    $node.remove();
                });
                $nodesToRemove = [];
            }
        });
        $stylesheet.appendTo('head');
    }, 1000);
    var _loop_1 = function (settingId) {
        var setting = wsAmeBrandingClsPreviewData.colorSettings[settingId];
        currentColors[setting.variableName] = setting.initialValue;
        wsAdminCustomizerPreview.registerPreviewer(settingId, function (newColor) {
            currentColors[setting.variableName] = newColor;
            updateColorPreview();
        });
    };
    //Initialize the current colors.
    for (var settingId in wsAmeBrandingClsPreviewData.colorSettings) {
        _loop_1(settingId);
    }
    //Watch for changes to the "color scheme override" and "force enable preview" settings.
    if (wsAmeBrandingClsPreviewData.overrideSettingId) {
        wsAdminCustomizerPreview.registerPreviewer(wsAmeBrandingClsPreviewData.overrideSettingId, function (newValue) {
            isOverrideEnabled = !!newValue;
            updateColorPreview();
        });
    }
    wsAdminCustomizerPreview.registerPreviewer(wsAmeBrandingClsPreviewData.forceSettingId, function (newValue) {
        forceEnablePreview = !!newValue;
        updateColorPreview();
    });
})(jQuery);
//# sourceMappingURL=ac-color-scheme-preview.js.map